name: Previews
description: Github Action used to deploy preview environments, to Google Cloud Run.
author: "@joggrdocs"
branding:
  icon: 'aperture'
  color: 'blue'
inputs:
  #------------------
  # Deployment
  #------------------

  name:
    description: "The name of the service (must be unique) to be deployed."
    required: true
  port:
    description: "The port that the application will run on in the container."
    required: false
    default: "8080"
  env_vars:
    description: "List of environment variables that will be injected during runtime, each on a new line."
    required: false
  secrets:
    description: "List of secrets that will be injected during runtime, each on a new line."
    required: false
  gcp_region:
    description: "The GCP Region where the service will be deployed."
    required: true
    default: "us-central1"
  gcp_project_id:
    description: "The GCP Project ID where the service will be deployed."
    required: true
  gcp_service_account_key:
    description: "The Service Account JSON Key used to push images to the GCP Artifact Registry."
    required: true
  gcp_artifact_repository:
    description: "The Artifact Registry name, you can override for custom names (i.e. the 'acme' in us-docker.pkg.dev/able-sailor-21423/acme)"
    required: true
  
  #------------------
  # Pull Request Integration
  #------------------

  github_token:
    description: "Github Token, pass in the `secrets.GITHUB_TOKEN`."
    required: true

  #------------------
  # Docker
  #------------------

  docker_file_name:
    description: "The Dockerfile name, you can override for custom names (i.e. DevDockerfile)"
    required: true
    default: "Dockerfile"
  docker_directory:
    description: "Directory where the DockerFile is located."
    required: true
    default: "."
  docker_build_args:
    description: "Comma separated list of arguments that will be injected during the build, each on a new line."
    required: false
outputs:
  url:
    description: "The preview URL for the running application"
    value: ${{ steps.deploy.outputs.url }}
runs:
  using: "composite"
  steps:
    - name: 'üí¨ Add Deployment in progress to Pull Request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const script = require('${{ github.action_path }}/lib/scripts/pullrequest-comment.js');
          await script({ github, context, core, }, 'deploying');

    - name: '#Ô∏è‚É£ Extract Pull Request #'
      uses: actions/github-script@v7
      id: pr-number
      with:
        result-encoding: string
        script: |
          if (!context.payload.number) {
            core.setFailed('No PR number found, you can only run Previews on Pull Requests.');
          }

          return context.payload.number;

    - name: '‚òÅÔ∏è Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        project_id: ${{ inputs.gcp_project_id }}
        credentials_json: '${{ inputs.gcp_service_account_key }}'

    - name: '‚òÅÔ∏è Setup Cloud SDK'
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ inputs.gcp_project_id }}
    
    - name: 'üê≥ Authorize Docker push'
      shell: bash
      run: gcloud auth configure-docker us-docker.pkg.dev --quiet

    - name: 'üê≥ Build and Push Container'
      uses: actions/github-script@v7
      env: 
        DOCKER_BUILD_ARGS: '${{ inputs.docker_build_args }}'
        GCP_PROJECT_ID: '${{ inputs.gcp_project_id }}'
        GCP_ARTIFACT_REPOSITORY: '${{ inputs.gcp_artifact_repository }}'
        NAME: '${{ inputs.name }}'
        DOCKER_DIRECTORY: '${{ inputs.docker_directory }}'
        DOCKER_FILE_NAME: '${{ inputs.docker_file_name }}'
        GITHUB_SHA: '${{ github.sha }}'
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const script = require('${{ github.action_path }}/lib/scripts/docker.js');
          const { env } = process;
          await script({ github, context, core, exec, env });

    - name: 'üöÄ Deploy to Cloud Run'
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: '${{ inputs.gcp_artifact_repository }}-${{ inputs.name }}-pr${{ steps.pr-number.outputs.result }}'
        image: 'us-docker.pkg.dev/${{ inputs.gcp_project_id }}/${{ inputs.gcp_artifact_repository }}/${{ inputs.name }}:${{ github.sha }}'
        region: '${{ inputs.gcp_region }}'
        flags: '--allow-unauthenticated --port=${{ inputs.port }} --service-account=${{ fromJSON(inputs.gcp_service_account_key).client_email }}'
        env_vars: ${{ inputs.env_vars }}
        secrets: ${{ inputs.secrets }}
        labels: |
          group=${{ inputs.gcp_artifact_repository }}
          service=${{ inputs.name }}
          pull_request=pr${{ steps.pr-number.outputs.result }}

    - name: 'üí¨ Add Deployment URL to Pull Request'
      uses: actions/github-script@v7
      env: 
        DEPLOY_URL: '${{ steps.deploy.outputs.url }}'
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const script = require('${{ github.action_path }}/lib/scripts/pullrequest-comment.js');
          const { DEPLOY_URL: url } = process.env;
          await script({ github, context, core, }, 'success', url);
    
    - name: '‚ùå Preview Failed'
      uses: actions/github-script@v7
      if: ${{ failure() }}
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const script = require('${{ github.action_path }}/lib/scripts/pullrequest-comment.js');
          await script({ github, context, core, }, 'failed');